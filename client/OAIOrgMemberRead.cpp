/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrgMemberRead.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrgMemberRead::OAIOrgMemberRead(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrgMemberRead::OAIOrgMemberRead() {
    this->initializeModel();
}

OAIOrgMemberRead::~OAIOrgMemberRead() {}

void OAIOrgMemberRead::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_email_verified_isSet = false;
    m_email_verified_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_family_name_isSet = false;
    m_family_name_isValid = false;

    m_picture_isSet = false;
    m_picture_isValid = false;

    m_is_superuser_isSet = false;
    m_is_superuser_isValid = false;

    m_is_onboarding_isSet = false;
    m_is_onboarding_isValid = false;

    m_onboarding_step_isSet = false;
    m_onboarding_step_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_last_login_isSet = false;
    m_last_login_isValid = false;

    m_last_ip_isSet = false;
    m_last_ip_isValid = false;

    m_logins_count_isSet = false;
    m_logins_count_isValid = false;

    m_identities_isSet = false;
    m_identities_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;
}

void OAIOrgMemberRead::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrgMemberRead::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_email_verified_isValid = ::OpenAPI::fromJsonValue(email_verified, json[QString("email_verified")]);
    m_email_verified_isSet = !json[QString("email_verified")].isNull() && m_email_verified_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(given_name, json[QString("given_name")]);
    m_given_name_isSet = !json[QString("given_name")].isNull() && m_given_name_isValid;

    m_family_name_isValid = ::OpenAPI::fromJsonValue(family_name, json[QString("family_name")]);
    m_family_name_isSet = !json[QString("family_name")].isNull() && m_family_name_isValid;

    m_picture_isValid = ::OpenAPI::fromJsonValue(picture, json[QString("picture")]);
    m_picture_isSet = !json[QString("picture")].isNull() && m_picture_isValid;

    m_is_superuser_isValid = ::OpenAPI::fromJsonValue(is_superuser, json[QString("is_superuser")]);
    m_is_superuser_isSet = !json[QString("is_superuser")].isNull() && m_is_superuser_isValid;

    m_is_onboarding_isValid = ::OpenAPI::fromJsonValue(is_onboarding, json[QString("is_onboarding")]);
    m_is_onboarding_isSet = !json[QString("is_onboarding")].isNull() && m_is_onboarding_isValid;

    m_onboarding_step_isValid = ::OpenAPI::fromJsonValue(onboarding_step, json[QString("onboarding_step")]);
    m_onboarding_step_isSet = !json[QString("onboarding_step")].isNull() && m_onboarding_step_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_last_login_isValid = ::OpenAPI::fromJsonValue(last_login, json[QString("last_login")]);
    m_last_login_isSet = !json[QString("last_login")].isNull() && m_last_login_isValid;

    m_last_ip_isValid = ::OpenAPI::fromJsonValue(last_ip, json[QString("last_ip")]);
    m_last_ip_isSet = !json[QString("last_ip")].isNull() && m_last_ip_isValid;

    m_logins_count_isValid = ::OpenAPI::fromJsonValue(logins_count, json[QString("logins_count")]);
    m_logins_count_isSet = !json[QString("logins_count")].isNull() && m_logins_count_isValid;

    m_identities_isValid = ::OpenAPI::fromJsonValue(identities, json[QString("identities")]);
    m_identities_isSet = !json[QString("identities")].isNull() && m_identities_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(settings, json[QString("settings")]);
    m_settings_isSet = !json[QString("settings")].isNull() && m_settings_isValid;
}

QString OAIOrgMemberRead::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrgMemberRead::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(email));
    }
    if (m_email_verified_isSet) {
        obj.insert(QString("email_verified"), ::OpenAPI::toJsonValue(email_verified));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("given_name"), ::OpenAPI::toJsonValue(given_name));
    }
    if (m_family_name_isSet) {
        obj.insert(QString("family_name"), ::OpenAPI::toJsonValue(family_name));
    }
    if (m_picture_isSet) {
        obj.insert(QString("picture"), ::OpenAPI::toJsonValue(picture));
    }
    if (m_is_superuser_isSet) {
        obj.insert(QString("is_superuser"), ::OpenAPI::toJsonValue(is_superuser));
    }
    if (m_is_onboarding_isSet) {
        obj.insert(QString("is_onboarding"), ::OpenAPI::toJsonValue(is_onboarding));
    }
    if (onboarding_step.isSet()) {
        obj.insert(QString("onboarding_step"), ::OpenAPI::toJsonValue(onboarding_step));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(created_at));
    }
    if (m_last_login_isSet) {
        obj.insert(QString("last_login"), ::OpenAPI::toJsonValue(last_login));
    }
    if (m_last_ip_isSet) {
        obj.insert(QString("last_ip"), ::OpenAPI::toJsonValue(last_ip));
    }
    if (m_logins_count_isSet) {
        obj.insert(QString("logins_count"), ::OpenAPI::toJsonValue(logins_count));
    }
    if (identities.size() > 0) {
        obj.insert(QString("identities"), ::OpenAPI::toJsonValue(identities));
    }
    if (m_settings_isSet) {
        obj.insert(QString("settings"), ::OpenAPI::toJsonValue(settings));
    }
    return obj;
}

QString OAIOrgMemberRead::getId() const {
    return id;
}
void OAIOrgMemberRead::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIOrgMemberRead::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrgMemberRead::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIOrgMemberRead::getEmail() const {
    return email;
}
void OAIOrgMemberRead::setEmail(const QString &email) {
    this->email = email;
    this->m_email_isSet = true;
}

bool OAIOrgMemberRead::is_email_Set() const{
    return m_email_isSet;
}

bool OAIOrgMemberRead::is_email_Valid() const{
    return m_email_isValid;
}

bool OAIOrgMemberRead::isEmailVerified() const {
    return email_verified;
}
void OAIOrgMemberRead::setEmailVerified(const bool &email_verified) {
    this->email_verified = email_verified;
    this->m_email_verified_isSet = true;
}

bool OAIOrgMemberRead::is_email_verified_Set() const{
    return m_email_verified_isSet;
}

bool OAIOrgMemberRead::is_email_verified_Valid() const{
    return m_email_verified_isValid;
}

QString OAIOrgMemberRead::getName() const {
    return name;
}
void OAIOrgMemberRead::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool OAIOrgMemberRead::is_name_Set() const{
    return m_name_isSet;
}

bool OAIOrgMemberRead::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIOrgMemberRead::getGivenName() const {
    return given_name;
}
void OAIOrgMemberRead::setGivenName(const QString &given_name) {
    this->given_name = given_name;
    this->m_given_name_isSet = true;
}

bool OAIOrgMemberRead::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAIOrgMemberRead::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAIOrgMemberRead::getFamilyName() const {
    return family_name;
}
void OAIOrgMemberRead::setFamilyName(const QString &family_name) {
    this->family_name = family_name;
    this->m_family_name_isSet = true;
}

bool OAIOrgMemberRead::is_family_name_Set() const{
    return m_family_name_isSet;
}

bool OAIOrgMemberRead::is_family_name_Valid() const{
    return m_family_name_isValid;
}

QString OAIOrgMemberRead::getPicture() const {
    return picture;
}
void OAIOrgMemberRead::setPicture(const QString &picture) {
    this->picture = picture;
    this->m_picture_isSet = true;
}

bool OAIOrgMemberRead::is_picture_Set() const{
    return m_picture_isSet;
}

bool OAIOrgMemberRead::is_picture_Valid() const{
    return m_picture_isValid;
}

bool OAIOrgMemberRead::isIsSuperuser() const {
    return is_superuser;
}
void OAIOrgMemberRead::setIsSuperuser(const bool &is_superuser) {
    this->is_superuser = is_superuser;
    this->m_is_superuser_isSet = true;
}

bool OAIOrgMemberRead::is_is_superuser_Set() const{
    return m_is_superuser_isSet;
}

bool OAIOrgMemberRead::is_is_superuser_Valid() const{
    return m_is_superuser_isValid;
}

bool OAIOrgMemberRead::isIsOnboarding() const {
    return is_onboarding;
}
void OAIOrgMemberRead::setIsOnboarding(const bool &is_onboarding) {
    this->is_onboarding = is_onboarding;
    this->m_is_onboarding_isSet = true;
}

bool OAIOrgMemberRead::is_is_onboarding_Set() const{
    return m_is_onboarding_isSet;
}

bool OAIOrgMemberRead::is_is_onboarding_Valid() const{
    return m_is_onboarding_isValid;
}

OAIOnboardingStep OAIOrgMemberRead::getOnboardingStep() const {
    return onboarding_step;
}
void OAIOrgMemberRead::setOnboardingStep(const OAIOnboardingStep &onboarding_step) {
    this->onboarding_step = onboarding_step;
    this->m_onboarding_step_isSet = true;
}

bool OAIOrgMemberRead::is_onboarding_step_Set() const{
    return m_onboarding_step_isSet;
}

bool OAIOrgMemberRead::is_onboarding_step_Valid() const{
    return m_onboarding_step_isValid;
}

QDateTime OAIOrgMemberRead::getCreatedAt() const {
    return created_at;
}
void OAIOrgMemberRead::setCreatedAt(const QDateTime &created_at) {
    this->created_at = created_at;
    this->m_created_at_isSet = true;
}

bool OAIOrgMemberRead::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIOrgMemberRead::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIOrgMemberRead::getLastLogin() const {
    return last_login;
}
void OAIOrgMemberRead::setLastLogin(const QDateTime &last_login) {
    this->last_login = last_login;
    this->m_last_login_isSet = true;
}

bool OAIOrgMemberRead::is_last_login_Set() const{
    return m_last_login_isSet;
}

bool OAIOrgMemberRead::is_last_login_Valid() const{
    return m_last_login_isValid;
}

QString OAIOrgMemberRead::getLastIp() const {
    return last_ip;
}
void OAIOrgMemberRead::setLastIp(const QString &last_ip) {
    this->last_ip = last_ip;
    this->m_last_ip_isSet = true;
}

bool OAIOrgMemberRead::is_last_ip_Set() const{
    return m_last_ip_isSet;
}

bool OAIOrgMemberRead::is_last_ip_Valid() const{
    return m_last_ip_isValid;
}

qint32 OAIOrgMemberRead::getLoginsCount() const {
    return logins_count;
}
void OAIOrgMemberRead::setLoginsCount(const qint32 &logins_count) {
    this->logins_count = logins_count;
    this->m_logins_count_isSet = true;
}

bool OAIOrgMemberRead::is_logins_count_Set() const{
    return m_logins_count_isSet;
}

bool OAIOrgMemberRead::is_logins_count_Valid() const{
    return m_logins_count_isValid;
}

QList<OAIIdentityRead> OAIOrgMemberRead::getIdentities() const {
    return identities;
}
void OAIOrgMemberRead::setIdentities(const QList<OAIIdentityRead> &identities) {
    this->identities = identities;
    this->m_identities_isSet = true;
}

bool OAIOrgMemberRead::is_identities_Set() const{
    return m_identities_isSet;
}

bool OAIOrgMemberRead::is_identities_Valid() const{
    return m_identities_isValid;
}

OAIObject OAIOrgMemberRead::getSettings() const {
    return settings;
}
void OAIOrgMemberRead::setSettings(const OAIObject &settings) {
    this->settings = settings;
    this->m_settings_isSet = true;
}

bool OAIOrgMemberRead::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAIOrgMemberRead::is_settings_Valid() const{
    return m_settings_isValid;
}

bool OAIOrgMemberRead::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_picture_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_superuser_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_onboarding_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (onboarding_step.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_login_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logins_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (identities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrgMemberRead::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_email_isValid && m_email_verified_isValid && m_is_superuser_isValid && m_is_onboarding_isValid && m_onboarding_step_isValid && m_created_at_isValid && m_identities_isValid && m_settings_isValid && true;
}

} // namespace OpenAPI
