/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserRoleCreate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserRoleCreate::OAIUserRoleCreate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserRoleCreate::OAIUserRoleCreate() {
    this->initializeModel();
}

OAIUserRoleCreate::~OAIUserRoleCreate() {}

void OAIUserRoleCreate::initializeModel() {

    m_role_isSet = false;
    m_role_isValid = false;

    m_tenant_isSet = false;
    m_tenant_isValid = false;
}

void OAIUserRoleCreate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserRoleCreate::fromJsonObject(QJsonObject json) {

    m_role_isValid = ::OpenAPI::fromJsonValue(role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;

    m_tenant_isValid = ::OpenAPI::fromJsonValue(tenant, json[QString("tenant")]);
    m_tenant_isSet = !json[QString("tenant")].isNull() && m_tenant_isValid;
}

QString OAIUserRoleCreate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserRoleCreate::asJsonObject() const {
    QJsonObject obj;
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(role));
    }
    if (m_tenant_isSet) {
        obj.insert(QString("tenant"), ::OpenAPI::toJsonValue(tenant));
    }
    return obj;
}

QString OAIUserRoleCreate::getRole() const {
    return role;
}
void OAIUserRoleCreate::setRole(const QString &role) {
    this->role = role;
    this->m_role_isSet = true;
}

bool OAIUserRoleCreate::is_role_Set() const{
    return m_role_isSet;
}

bool OAIUserRoleCreate::is_role_Valid() const{
    return m_role_isValid;
}

QString OAIUserRoleCreate::getTenant() const {
    return tenant;
}
void OAIUserRoleCreate::setTenant(const QString &tenant) {
    this->tenant = tenant;
    this->m_tenant_isSet = true;
}

bool OAIUserRoleCreate::is_tenant_Set() const{
    return m_tenant_isSet;
}

bool OAIUserRoleCreate::is_tenant_Valid() const{
    return m_tenant_isValid;
}

bool OAIUserRoleCreate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserRoleCreate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_role_isValid && m_tenant_isValid && true;
}

} // namespace OpenAPI
