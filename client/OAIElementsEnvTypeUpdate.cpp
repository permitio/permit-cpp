/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIElementsEnvTypeUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIElementsEnvTypeUpdate::OAIElementsEnvTypeUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIElementsEnvTypeUpdate::OAIElementsEnvTypeUpdate() {
    this->initializeModel();
}

OAIElementsEnvTypeUpdate::~OAIElementsEnvTypeUpdate() {}

void OAIElementsEnvTypeUpdate::initializeModel() {

    m_roles_to_levels_isSet = false;
    m_roles_to_levels_isValid = false;
}

void OAIElementsEnvTypeUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIElementsEnvTypeUpdate::fromJsonObject(QJsonObject json) {

    if(json["roles_to_levels"].isObject()){
        auto varmap = json["roles_to_levels"].toObject().toVariantMap();
        m_roles_to_levels_isValid = true;
        if(varmap.count() > 0){
            for(auto val : varmap.keys()){
                QList<QString> item;
                auto jval = QJsonValue::fromVariant(varmap.value(val));
                m_roles_to_levels_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_roles_to_levels_isSet &= !jval.isNull() && m_roles_to_levels_isValid;
                roles_to_levels.insert(roles_to_levels.end(), val, item);
            }
        }
    }
}

QString OAIElementsEnvTypeUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIElementsEnvTypeUpdate::asJsonObject() const {
    QJsonObject obj;
    if (roles_to_levels.size() > 0) {
        
        obj.insert(QString("roles_to_levels"), toJsonValue(roles_to_levels));
    }
    return obj;
}

QMap<QString, QList<QString>> OAIElementsEnvTypeUpdate::getRolesToLevels() const {
    return roles_to_levels;
}
void OAIElementsEnvTypeUpdate::setRolesToLevels(const QMap<QString, QList<QString>> &roles_to_levels) {
    this->roles_to_levels = roles_to_levels;
    this->m_roles_to_levels_isSet = true;
}

bool OAIElementsEnvTypeUpdate::is_roles_to_levels_Set() const{
    return m_roles_to_levels_isSet;
}

bool OAIElementsEnvTypeUpdate::is_roles_to_levels_Valid() const{
    return m_roles_to_levels_isValid;
}

bool OAIElementsEnvTypeUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (roles_to_levels.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIElementsEnvTypeUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
