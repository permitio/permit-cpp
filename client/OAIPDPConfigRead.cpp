/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPDPConfigRead.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPDPConfigRead::OAIPDPConfigRead(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPDPConfigRead::OAIPDPConfigRead() {
    this->initializeModel();
}

OAIPDPConfigRead::~OAIPDPConfigRead() {}

void OAIPDPConfigRead::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_organization_id_isSet = false;
    m_organization_id_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_environment_id_isSet = false;
    m_environment_id_isValid = false;

    m_client_secret_isSet = false;
    m_client_secret_isValid = false;
}

void OAIPDPConfigRead::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPDPConfigRead::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_organization_id_isValid = ::OpenAPI::fromJsonValue(organization_id, json[QString("organization_id")]);
    m_organization_id_isSet = !json[QString("organization_id")].isNull() && m_organization_id_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(project_id, json[QString("project_id")]);
    m_project_id_isSet = !json[QString("project_id")].isNull() && m_project_id_isValid;

    m_environment_id_isValid = ::OpenAPI::fromJsonValue(environment_id, json[QString("environment_id")]);
    m_environment_id_isSet = !json[QString("environment_id")].isNull() && m_environment_id_isValid;

    m_client_secret_isValid = ::OpenAPI::fromJsonValue(client_secret, json[QString("client_secret")]);
    m_client_secret_isSet = !json[QString("client_secret")].isNull() && m_client_secret_isValid;
}

QString OAIPDPConfigRead::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPDPConfigRead::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
    if (m_organization_id_isSet) {
        obj.insert(QString("organization_id"), ::OpenAPI::toJsonValue(organization_id));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("project_id"), ::OpenAPI::toJsonValue(project_id));
    }
    if (m_environment_id_isSet) {
        obj.insert(QString("environment_id"), ::OpenAPI::toJsonValue(environment_id));
    }
    if (m_client_secret_isSet) {
        obj.insert(QString("client_secret"), ::OpenAPI::toJsonValue(client_secret));
    }
    return obj;
}

QString OAIPDPConfigRead::getId() const {
    return id;
}
void OAIPDPConfigRead::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool OAIPDPConfigRead::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPDPConfigRead::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIPDPConfigRead::getName() const {
    return name;
}
void OAIPDPConfigRead::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool OAIPDPConfigRead::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPDPConfigRead::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPDPConfigRead::getOrganizationId() const {
    return organization_id;
}
void OAIPDPConfigRead::setOrganizationId(const QString &organization_id) {
    this->organization_id = organization_id;
    this->m_organization_id_isSet = true;
}

bool OAIPDPConfigRead::is_organization_id_Set() const{
    return m_organization_id_isSet;
}

bool OAIPDPConfigRead::is_organization_id_Valid() const{
    return m_organization_id_isValid;
}

QString OAIPDPConfigRead::getProjectId() const {
    return project_id;
}
void OAIPDPConfigRead::setProjectId(const QString &project_id) {
    this->project_id = project_id;
    this->m_project_id_isSet = true;
}

bool OAIPDPConfigRead::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIPDPConfigRead::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIPDPConfigRead::getEnvironmentId() const {
    return environment_id;
}
void OAIPDPConfigRead::setEnvironmentId(const QString &environment_id) {
    this->environment_id = environment_id;
    this->m_environment_id_isSet = true;
}

bool OAIPDPConfigRead::is_environment_id_Set() const{
    return m_environment_id_isSet;
}

bool OAIPDPConfigRead::is_environment_id_Valid() const{
    return m_environment_id_isValid;
}

QString OAIPDPConfigRead::getClientSecret() const {
    return client_secret;
}
void OAIPDPConfigRead::setClientSecret(const QString &client_secret) {
    this->client_secret = client_secret;
    this->m_client_secret_isSet = true;
}

bool OAIPDPConfigRead::is_client_secret_Set() const{
    return m_client_secret_isSet;
}

bool OAIPDPConfigRead::is_client_secret_Valid() const{
    return m_client_secret_isValid;
}

bool OAIPDPConfigRead::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPDPConfigRead::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_organization_id_isValid && m_project_id_isValid && m_environment_id_isValid && m_client_secret_isValid && true;
}

} // namespace OpenAPI
