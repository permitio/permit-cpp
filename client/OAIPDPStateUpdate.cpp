/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPDPStateUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPDPStateUpdate::OAIPDPStateUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPDPStateUpdate::OAIPDPStateUpdate() {
    this->initializeModel();
}

OAIPDPStateUpdate::~OAIPDPStateUpdate() {}

void OAIPDPStateUpdate::initializeModel() {

    m_pdp_instance_id_isSet = false;
    m_pdp_instance_id_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIPDPStateUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPDPStateUpdate::fromJsonObject(QJsonObject json) {

    m_pdp_instance_id_isValid = ::OpenAPI::fromJsonValue(pdp_instance_id, json[QString("pdp_instance_id")]);
    m_pdp_instance_id_isSet = !json[QString("pdp_instance_id")].isNull() && m_pdp_instance_id_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIPDPStateUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPDPStateUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_pdp_instance_id_isSet) {
        obj.insert(QString("pdp_instance_id"), ::OpenAPI::toJsonValue(pdp_instance_id));
    }
    if (state.isSet()) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(state));
    }
    return obj;
}

QString OAIPDPStateUpdate::getPdpInstanceId() const {
    return pdp_instance_id;
}
void OAIPDPStateUpdate::setPdpInstanceId(const QString &pdp_instance_id) {
    this->pdp_instance_id = pdp_instance_id;
    this->m_pdp_instance_id_isSet = true;
}

bool OAIPDPStateUpdate::is_pdp_instance_id_Set() const{
    return m_pdp_instance_id_isSet;
}

bool OAIPDPStateUpdate::is_pdp_instance_id_Valid() const{
    return m_pdp_instance_id_isValid;
}

OAIPDPState OAIPDPStateUpdate::getState() const {
    return state;
}
void OAIPDPStateUpdate::setState(const OAIPDPState &state) {
    this->state = state;
    this->m_state_isSet = true;
}

bool OAIPDPStateUpdate::is_state_Set() const{
    return m_state_isSet;
}

bool OAIPDPStateUpdate::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIPDPStateUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pdp_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPDPStateUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pdp_instance_id_isValid && m_state_isValid && true;
}

} // namespace OpenAPI
