/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPIKeyScopeRead.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPIKeyScopeRead::OAIAPIKeyScopeRead(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPIKeyScopeRead::OAIAPIKeyScopeRead() {
    this->initializeModel();
}

OAIAPIKeyScopeRead::~OAIAPIKeyScopeRead() {}

void OAIAPIKeyScopeRead::initializeModel() {

    m_organization_id_isSet = false;
    m_organization_id_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_environment_id_isSet = false;
    m_environment_id_isValid = false;
}

void OAIAPIKeyScopeRead::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPIKeyScopeRead::fromJsonObject(QJsonObject json) {

    m_organization_id_isValid = ::OpenAPI::fromJsonValue(organization_id, json[QString("organization_id")]);
    m_organization_id_isSet = !json[QString("organization_id")].isNull() && m_organization_id_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(project_id, json[QString("project_id")]);
    m_project_id_isSet = !json[QString("project_id")].isNull() && m_project_id_isValid;

    m_environment_id_isValid = ::OpenAPI::fromJsonValue(environment_id, json[QString("environment_id")]);
    m_environment_id_isSet = !json[QString("environment_id")].isNull() && m_environment_id_isValid;
}

QString OAIAPIKeyScopeRead::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPIKeyScopeRead::asJsonObject() const {
    QJsonObject obj;
    if (m_organization_id_isSet) {
        obj.insert(QString("organization_id"), ::OpenAPI::toJsonValue(organization_id));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("project_id"), ::OpenAPI::toJsonValue(project_id));
    }
    if (m_environment_id_isSet) {
        obj.insert(QString("environment_id"), ::OpenAPI::toJsonValue(environment_id));
    }
    return obj;
}

QString OAIAPIKeyScopeRead::getOrganizationId() const {
    return organization_id;
}
void OAIAPIKeyScopeRead::setOrganizationId(const QString &organization_id) {
    this->organization_id = organization_id;
    this->m_organization_id_isSet = true;
}

bool OAIAPIKeyScopeRead::is_organization_id_Set() const{
    return m_organization_id_isSet;
}

bool OAIAPIKeyScopeRead::is_organization_id_Valid() const{
    return m_organization_id_isValid;
}

QString OAIAPIKeyScopeRead::getProjectId() const {
    return project_id;
}
void OAIAPIKeyScopeRead::setProjectId(const QString &project_id) {
    this->project_id = project_id;
    this->m_project_id_isSet = true;
}

bool OAIAPIKeyScopeRead::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIAPIKeyScopeRead::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIAPIKeyScopeRead::getEnvironmentId() const {
    return environment_id;
}
void OAIAPIKeyScopeRead::setEnvironmentId(const QString &environment_id) {
    this->environment_id = environment_id;
    this->m_environment_id_isSet = true;
}

bool OAIAPIKeyScopeRead::is_environment_id_Set() const{
    return m_environment_id_isSet;
}

bool OAIAPIKeyScopeRead::is_environment_id_Valid() const{
    return m_environment_id_isValid;
}

bool OAIAPIKeyScopeRead::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_organization_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPIKeyScopeRead::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_organization_id_isValid && true;
}

} // namespace OpenAPI
