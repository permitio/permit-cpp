/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuditLogObjects.h
 *
 * 
 */

#ifndef OAIAuditLogObjects_H
#define OAIAuditLogObjects_H

#include <QJsonObject>

#include "OAIActionObject.h"
#include "OAIEnvironment_Object.h"
#include "OAIOrganization_Object.h"
#include "OAIPdp_Config_Object.h"
#include "OAIProject_Object.h"
#include "OAIResourceTypeObject.h"
#include "OAITenantObject.h"
#include "OAIUserObject.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrganization_Object;
class OAIProject_Object;
class OAIEnvironment_Object;
class OAIPdp_Config_Object;
class OAIUserObject;
class OAIActionObject;
class OAIResourceTypeObject;
class OAITenantObject;

class OAIAuditLogObjects : public OAIObject {
public:
    OAIAuditLogObjects();
    OAIAuditLogObjects(QString json);
    ~OAIAuditLogObjects() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOrganization_Object getOrganizationObject() const;
    void setOrganizationObject(const OAIOrganization_Object &organization_object);
    bool is_organization_object_Set() const;
    bool is_organization_object_Valid() const;

    OAIProject_Object getProjectObject() const;
    void setProjectObject(const OAIProject_Object &project_object);
    bool is_project_object_Set() const;
    bool is_project_object_Valid() const;

    OAIEnvironment_Object getEnvironmentObject() const;
    void setEnvironmentObject(const OAIEnvironment_Object &environment_object);
    bool is_environment_object_Set() const;
    bool is_environment_object_Valid() const;

    OAIPdp_Config_Object getPdpConfigObject() const;
    void setPdpConfigObject(const OAIPdp_Config_Object &pdp_config_object);
    bool is_pdp_config_object_Set() const;
    bool is_pdp_config_object_Valid() const;

    OAIUserObject getUserObject() const;
    void setUserObject(const OAIUserObject &user_object);
    bool is_user_object_Set() const;
    bool is_user_object_Valid() const;

    OAIActionObject getActionObject() const;
    void setActionObject(const OAIActionObject &action_object);
    bool is_action_object_Set() const;
    bool is_action_object_Valid() const;

    OAIResourceTypeObject getResourceTypeObject() const;
    void setResourceTypeObject(const OAIResourceTypeObject &resource_type_object);
    bool is_resource_type_object_Set() const;
    bool is_resource_type_object_Valid() const;

    OAITenantObject getTenantObject() const;
    void setTenantObject(const OAITenantObject &tenant_object);
    bool is_tenant_object_Set() const;
    bool is_tenant_object_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOrganization_Object organization_object;
    bool m_organization_object_isSet;
    bool m_organization_object_isValid;

    OAIProject_Object project_object;
    bool m_project_object_isSet;
    bool m_project_object_isValid;

    OAIEnvironment_Object environment_object;
    bool m_environment_object_isSet;
    bool m_environment_object_isValid;

    OAIPdp_Config_Object pdp_config_object;
    bool m_pdp_config_object_isSet;
    bool m_pdp_config_object_isValid;

    OAIUserObject user_object;
    bool m_user_object_isSet;
    bool m_user_object_isValid;

    OAIActionObject action_object;
    bool m_action_object_isSet;
    bool m_action_object_isValid;

    OAIResourceTypeObject resource_type_object;
    bool m_resource_type_object_isSet;
    bool m_resource_type_object_isValid;

    OAITenantObject tenant_object;
    bool m_tenant_object_isSet;
    bool m_tenant_object_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuditLogObjects)

#endif // OAIAuditLogObjects_H
