/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElementsEnvTypeRead.h
 *
 * 
 */

#ifndef OAIElementsEnvTypeRead_H
#define OAIElementsEnvTypeRead_H

#include <QJsonObject>

#include "OAIPermissionLevelRoleRead.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPermissionLevelRoleRead;

class OAIElementsEnvTypeRead : public OAIObject {
public:
    OAIElementsEnvTypeRead();
    OAIElementsEnvTypeRead(QString json);
    ~OAIElementsEnvTypeRead() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QList<OAIPermissionLevelRoleRead>> getRolesToLevels() const;
    void setRolesToLevels(const QMap<QString, QList<OAIPermissionLevelRoleRead>> &roles_to_levels);
    bool is_roles_to_levels_Set() const;
    bool is_roles_to_levels_Valid() const;

    QString getElementsType() const;
    void setElementsType(const QString &elements_type);
    bool is_elements_type_Set() const;
    bool is_elements_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QList<OAIPermissionLevelRoleRead>> roles_to_levels;
    bool m_roles_to_levels_isSet;
    bool m_roles_to_levels_isValid;

    QString elements_type;
    bool m_elements_type_isSet;
    bool m_elements_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElementsEnvTypeRead)

#endif // OAIElementsEnvTypeRead_H
