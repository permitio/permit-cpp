/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOPAMetrics.h
 *
 * 
 */

#ifndef OAIOPAMetrics_H
#define OAIOPAMetrics_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOPAMetrics : public OAIObject {
public:
    OAIOPAMetrics();
    OAIOPAMetrics(QString json);
    ~OAIOPAMetrics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTimerRegoInputParseNs() const;
    void setTimerRegoInputParseNs(const qint32 &timer_rego_input_parse_ns);
    bool is_timer_rego_input_parse_ns_Set() const;
    bool is_timer_rego_input_parse_ns_Valid() const;

    qint32 getTimerRegoQueryParseNs() const;
    void setTimerRegoQueryParseNs(const qint32 &timer_rego_query_parse_ns);
    bool is_timer_rego_query_parse_ns_Set() const;
    bool is_timer_rego_query_parse_ns_Valid() const;

    qint32 getTimerRegoQueryCompileNs() const;
    void setTimerRegoQueryCompileNs(const qint32 &timer_rego_query_compile_ns);
    bool is_timer_rego_query_compile_ns_Set() const;
    bool is_timer_rego_query_compile_ns_Valid() const;

    qint32 getTimerRegoQueryEvalNs() const;
    void setTimerRegoQueryEvalNs(const qint32 &timer_rego_query_eval_ns);
    bool is_timer_rego_query_eval_ns_Set() const;
    bool is_timer_rego_query_eval_ns_Valid() const;

    qint32 getTimerRegoModuleParseNs() const;
    void setTimerRegoModuleParseNs(const qint32 &timer_rego_module_parse_ns);
    bool is_timer_rego_module_parse_ns_Set() const;
    bool is_timer_rego_module_parse_ns_Valid() const;

    qint32 getTimerRegoModuleCompileNs() const;
    void setTimerRegoModuleCompileNs(const qint32 &timer_rego_module_compile_ns);
    bool is_timer_rego_module_compile_ns_Set() const;
    bool is_timer_rego_module_compile_ns_Valid() const;

    qint32 getTimerServerHandlerNs() const;
    void setTimerServerHandlerNs(const qint32 &timer_server_handler_ns);
    bool is_timer_server_handler_ns_Set() const;
    bool is_timer_server_handler_ns_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 timer_rego_input_parse_ns;
    bool m_timer_rego_input_parse_ns_isSet;
    bool m_timer_rego_input_parse_ns_isValid;

    qint32 timer_rego_query_parse_ns;
    bool m_timer_rego_query_parse_ns_isSet;
    bool m_timer_rego_query_parse_ns_isValid;

    qint32 timer_rego_query_compile_ns;
    bool m_timer_rego_query_compile_ns_isSet;
    bool m_timer_rego_query_compile_ns_isValid;

    qint32 timer_rego_query_eval_ns;
    bool m_timer_rego_query_eval_ns_isSet;
    bool m_timer_rego_query_eval_ns_isValid;

    qint32 timer_rego_module_parse_ns;
    bool m_timer_rego_module_parse_ns_isSet;
    bool m_timer_rego_module_parse_ns_isValid;

    qint32 timer_rego_module_compile_ns;
    bool m_timer_rego_module_compile_ns_isSet;
    bool m_timer_rego_module_compile_ns_isValid;

    qint32 timer_server_handler_ns;
    bool m_timer_server_handler_ns_isSet;
    bool m_timer_server_handler_ns_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOPAMetrics)

#endif // OAIOPAMetrics_H
