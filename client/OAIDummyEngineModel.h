/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDummyEngineModel.h
 *
 * dummy engine class in case we couldn&#39;t parse the log but we didn&#39;t want to drop it
 */

#ifndef OAIDummyEngineModel_H
#define OAIDummyEngineModel_H

#include <QJsonObject>

#include "OAIEngine.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDummyEngineModel : public OAIObject {
public:
    OAIDummyEngineModel();
    OAIDummyEngineModel(QString json);
    ~OAIDummyEngineModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEngine getEngine() const;
    void setEngine(const OAIEngine &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEngine engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QDateTime timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDummyEngineModel)

#endif // OAIDummyEngineModel_H
