/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelationshipTupleObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelationshipTupleObject::OAIRelationshipTupleObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelationshipTupleObject::OAIRelationshipTupleObject() {
    this->initializeModel();
}

OAIRelationshipTupleObject::~OAIRelationshipTupleObject() {}

void OAIRelationshipTupleObject::initializeModel() {

    m_subject_str_isSet = false;
    m_subject_str_isValid = false;

    m_relation_str_isSet = false;
    m_relation_str_isValid = false;

    m_object_str_isSet = false;
    m_object_str_isValid = false;
}

void OAIRelationshipTupleObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelationshipTupleObject::fromJsonObject(QJsonObject json) {

    m_subject_str_isValid = ::OpenAPI::fromJsonValue(subject_str, json[QString("subject_str")]);
    m_subject_str_isSet = !json[QString("subject_str")].isNull() && m_subject_str_isValid;

    m_relation_str_isValid = ::OpenAPI::fromJsonValue(relation_str, json[QString("relation_str")]);
    m_relation_str_isSet = !json[QString("relation_str")].isNull() && m_relation_str_isValid;

    m_object_str_isValid = ::OpenAPI::fromJsonValue(object_str, json[QString("object_str")]);
    m_object_str_isSet = !json[QString("object_str")].isNull() && m_object_str_isValid;
}

QString OAIRelationshipTupleObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelationshipTupleObject::asJsonObject() const {
    QJsonObject obj;
    if (m_subject_str_isSet) {
        obj.insert(QString("subject_str"), ::OpenAPI::toJsonValue(subject_str));
    }
    if (m_relation_str_isSet) {
        obj.insert(QString("relation_str"), ::OpenAPI::toJsonValue(relation_str));
    }
    if (m_object_str_isSet) {
        obj.insert(QString("object_str"), ::OpenAPI::toJsonValue(object_str));
    }
    return obj;
}

QString OAIRelationshipTupleObject::getSubjectStr() const {
    return subject_str;
}
void OAIRelationshipTupleObject::setSubjectStr(const QString &subject_str) {
    this->subject_str = subject_str;
    this->m_subject_str_isSet = true;
}

bool OAIRelationshipTupleObject::is_subject_str_Set() const{
    return m_subject_str_isSet;
}

bool OAIRelationshipTupleObject::is_subject_str_Valid() const{
    return m_subject_str_isValid;
}

QString OAIRelationshipTupleObject::getRelationStr() const {
    return relation_str;
}
void OAIRelationshipTupleObject::setRelationStr(const QString &relation_str) {
    this->relation_str = relation_str;
    this->m_relation_str_isSet = true;
}

bool OAIRelationshipTupleObject::is_relation_str_Set() const{
    return m_relation_str_isSet;
}

bool OAIRelationshipTupleObject::is_relation_str_Valid() const{
    return m_relation_str_isValid;
}

QString OAIRelationshipTupleObject::getObjectStr() const {
    return object_str;
}
void OAIRelationshipTupleObject::setObjectStr(const QString &object_str) {
    this->object_str = object_str;
    this->m_object_str_isSet = true;
}

bool OAIRelationshipTupleObject::is_object_str_Set() const{
    return m_object_str_isSet;
}

bool OAIRelationshipTupleObject::is_object_str_Valid() const{
    return m_object_str_isValid;
}

bool OAIRelationshipTupleObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subject_str_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relation_str_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_str_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelationshipTupleObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_subject_str_isValid && m_relation_str_isValid && m_object_str_isValid && true;
}

} // namespace OpenAPI
