/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDummyEngineModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDummyEngineModel::OAIDummyEngineModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDummyEngineModel::OAIDummyEngineModel() {
    this->initializeModel();
}

OAIDummyEngineModel::~OAIDummyEngineModel() {}

void OAIDummyEngineModel::initializeModel() {

    m_engine_isSet = false;
    m_engine_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;
}

void OAIDummyEngineModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDummyEngineModel::fromJsonObject(QJsonObject json) {

    m_engine_isValid = ::OpenAPI::fromJsonValue(engine, json[QString("engine")]);
    m_engine_isSet = !json[QString("engine")].isNull() && m_engine_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;
}

QString OAIDummyEngineModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDummyEngineModel::asJsonObject() const {
    QJsonObject obj;
    if (engine.isSet()) {
        obj.insert(QString("engine"), ::OpenAPI::toJsonValue(engine));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(timestamp));
    }
    return obj;
}

OAIEngine OAIDummyEngineModel::getEngine() const {
    return engine;
}
void OAIDummyEngineModel::setEngine(const OAIEngine &engine) {
    this->engine = engine;
    this->m_engine_isSet = true;
}

bool OAIDummyEngineModel::is_engine_Set() const{
    return m_engine_isSet;
}

bool OAIDummyEngineModel::is_engine_Valid() const{
    return m_engine_isValid;
}

QDateTime OAIDummyEngineModel::getTimestamp() const {
    return timestamp;
}
void OAIDummyEngineModel::setTimestamp(const QDateTime &timestamp) {
    this->timestamp = timestamp;
    this->m_timestamp_isSet = true;
}

bool OAIDummyEngineModel::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAIDummyEngineModel::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

bool OAIDummyEngineModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (engine.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDummyEngineModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
