/**
 * Permit.io API
 *  Authorization as a service 
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOnboardingStep.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOnboardingStep::OAIOnboardingStep(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOnboardingStep::OAIOnboardingStep() {
    this->initializeModel();
}

OAIOnboardingStep::~OAIOnboardingStep() {}

void OAIOnboardingStep::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOnboardingStep::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOnboardingStep::fromJson(QString jsonString) {
    
    if ( jsonString.compare("create_organization", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOnboardingStep::CREATE_ORGANIZATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("create_project", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOnboardingStep::CREATE_PROJECT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("create_resource", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOnboardingStep::CREATE_RESOURCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("create_actions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOnboardingStep::CREATE_ACTIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("assign_permissions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOnboardingStep::ASSIGN_PERMISSIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("assign_user_roles", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOnboardingStep::ASSIGN_USER_ROLES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("connect_sdk", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOnboardingStep::CONNECT_SDK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("done", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOnboardingStep::DONE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOnboardingStep::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOnboardingStep::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOnboardingStep::CREATE_ORGANIZATION:
            val = "create_organization";
            break;
        case eOAIOnboardingStep::CREATE_PROJECT:
            val = "create_project";
            break;
        case eOAIOnboardingStep::CREATE_RESOURCE:
            val = "create_resource";
            break;
        case eOAIOnboardingStep::CREATE_ACTIONS:
            val = "create_actions";
            break;
        case eOAIOnboardingStep::ASSIGN_PERMISSIONS:
            val = "assign_permissions";
            break;
        case eOAIOnboardingStep::ASSIGN_USER_ROLES:
            val = "assign_user_roles";
            break;
        case eOAIOnboardingStep::CONNECT_SDK:
            val = "connect_sdk";
            break;
        case eOAIOnboardingStep::DONE:
            val = "done";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOnboardingStep::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOnboardingStep::eOAIOnboardingStep OAIOnboardingStep::getValue() const {
    return m_value;
}

void OAIOnboardingStep::setValue(const OAIOnboardingStep::eOAIOnboardingStep& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOnboardingStep::isSet() const {
    
    return m_value_isSet;
}

bool OAIOnboardingStep::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
